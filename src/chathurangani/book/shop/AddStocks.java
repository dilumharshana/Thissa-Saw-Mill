/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chathurangani.book.shop;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.SQLException;
import javax.swing.JOptionPane;


public class AddStocks extends javax.swing.JFrame {

    /**
     * Creates new form AddStocks
     */
    public AddStocks() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ok.png")));
        
        submit.setEnabled(false);

    }

    static boolean[] filledChek = {false, false, false, false, false};
    int icount = 1;
    boolean dot = false; //cheking if " . " is tyoe at one time
    dbConnector connect = new dbConnector(); //databse connection
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        itemCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        cprice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sprice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        itemCount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Items");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Arial", 2, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add New Items");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Item Code");

        itemCode.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        itemCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemCodeKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setText("Item Name");

        name.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        cprice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        cprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cpriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cpriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cpriceKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Cash Price");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setText("Selling Price");

        sprice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        sprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                spriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spriceKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setText("Stock");

        stock.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        stock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stockKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                stockKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sprice, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cprice, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(itemCode)))
                .addContainerGap(113, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemCode, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(name)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cprice)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sprice)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stock)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        submit.setBackground(new java.awt.Color(0, 255, 255));
        submit.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setText("ADD ITEM");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        itemCount.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        itemCount.setForeground(new java.awt.Color(0, 51, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(itemCount, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemCount, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itemCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCodeKeyReleased
        String lenth = itemCode.getText().trim();

        if (lenth.isEmpty()) {
            filledChek[0] = false;
        } else {
            filledChek[0] = true;
        }

        if (filledChek[0] == true && filledChek[1] == true && filledChek[2] == true && filledChek[3] == true && filledChek[4] == true) {
            submit.setEnabled(true);
        } else {
            submit.setEnabled(false);
        }
    }//GEN-LAST:event_itemCodeKeyReleased

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
        String lenth = name.getText().trim();

        if (lenth.isEmpty()) {
            filledChek[1] = false;
        } else {
            filledChek[1] = true;
        }

        if (filledChek[0] == true && filledChek[1] == true && filledChek[2] == true && filledChek[3] == true && filledChek[4] == true) {
            submit.setEnabled(true);
        } else {
            submit.setEnabled(false);
        }
    }//GEN-LAST:event_nameKeyReleased

    private void cpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpriceKeyReleased
        String lenth = cprice.getText().trim();
        char charactor = evt.getKeyChar();

        if (lenth.isEmpty()) {
            filledChek[2] = false;
        } else {
            filledChek[2] = true;
        }

        if (filledChek[0] == true && filledChek[1] == true && filledChek[2] == true && filledChek[3] == true && filledChek[4] == true) {
            submit.setEnabled(true);
        } else {
            submit.setEnabled(false);
        }


    }//GEN-LAST:event_cpriceKeyReleased

    private void spriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spriceKeyReleased
        String lenth = sprice.getText().trim();

        if (lenth.isEmpty()) {
            filledChek[3] = false;
        } else {
            filledChek[3] = true;
        }

        if (filledChek[0] == true && filledChek[1] == true && filledChek[2] == true && filledChek[3] == true && filledChek[4] == true) {
            submit.setEnabled(true);
        } else {
            submit.setEnabled(false);
        }
    }//GEN-LAST:event_spriceKeyReleased

    private void stockKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockKeyReleased
        String lenth = stock.getText().trim();

        if (lenth.isEmpty()) {
            filledChek[4] = false;
        } else {
            filledChek[4] = true;
        }
        
        if (filledChek[0] == true && filledChek[1] == true && filledChek[2] == true && filledChek[3] == true && filledChek[4] == true) {
            submit.setEnabled(true);
        } else {
            submit.setEnabled(false);
        }
    }//GEN-LAST:event_stockKeyReleased

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
        char character = evt.getKeyChar();
        String lenth = name.getText().trim();

        if (lenth.length() == 100) {
            evt.consume();
        }

    }//GEN-LAST:event_nameKeyTyped

    private void cpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpriceKeyTyped

        String lenth = cprice.getText().trim();
        char charactor = evt.getKeyChar();
        
        if (lenth.length() == 16) 
           {
              evt.consume();
           }

           // IF DOT HAS TYPED THIS PART WILL BW RUN
        if(dot == false)
            {
                            if ((Character.isDigit(charactor)) || (Character.isISOControl(charactor)) || charactor == KeyEvent.VK_PERIOD)
                            {
                               cprice.setEditable(true);
                                
                            } else {
                                
                               evt.consume();
                            }
                             
            }
        
        else
            {
   // IF DOT DOES NOT HAS TYPED THIS PART WILL RUN
                            if ((Character.isDigit(charactor)) || (Character.isISOControl(charactor)) )
                                {
                                    if(lenth.length() == lenth.indexOf(".")+3)
                                        {
                                         evt.consume();
                                        }
                                }
                            else
                                {
                                       evt.consume();
                                }
            }
   
  
    //CHAKING IF ALREADY " . " IN TEXT BOX
        if(!lenth.contains("."))
            {
                dot=false;
                
            }
     
    //MAKE dot VARIABLE TRUE IF USER PRESSED " . "
        if(charactor == KeyEvent.VK_PERIOD)
            {
                dot = true;
           }

    }//GEN-LAST:event_cpriceKeyTyped
    
    private void spriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spriceKeyTyped
        String lenth = sprice.getText().trim();
        char charactor = evt.getKeyChar();

       if (lenth.length() == 16) 
           {
              evt.consume();
           }

           // IF DOT HAS TYPED THIS PART WILL BW RUN
        if(dot == false)
            {
                            if ((Character.isDigit(charactor)) || (Character.isISOControl(charactor)) || charactor == KeyEvent.VK_PERIOD)
                            {
                               sprice.setEditable(true);
                                
                            } else {
                                
                               evt.consume();
                            }
                             
            }
        
        else
            {
   // IF DOT DOES NOT HAS TYPED THIS PART WILL RUN
                            if ((Character.isDigit(charactor)) || (Character.isISOControl(charactor)) )
                                {
                                    if(lenth.length() == lenth.indexOf(".")+3)
                                        {
                                         evt.consume();
                                        }
                                }
                            else
                                {
                                       evt.consume();
                                }
            }
   
  
    //CHAKING IF ALREADY " . " IN TEXT BOX
        if(!lenth.contains("."))
            {
                dot=false;
                
            }
     
    //MAKE dot VARIABLE TRUE IF USER PRESSED " . "
        if(charactor == KeyEvent.VK_PERIOD)
            {
                dot = true;
           }

    
    }//GEN-LAST:event_spriceKeyTyped

    private void stockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockKeyTyped
        String lenth = stock.getText().trim();
        char charactor = evt.getKeyChar();

        if (lenth.length() == 8) {
            evt.consume();
        }

        if ((Character.isDigit(charactor)) || (Character.isISOControl(charactor))) {
            stock.setEditable(true);
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_stockKeyTyped

    private void itemCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCodeKeyPressed
        String lenth = itemCode.getText().trim();

        if (lenth.isEmpty()) {
            filledChek[0] = false;
        } else {
            filledChek[0] = true;
        }

        if (filledChek[0] == true && filledChek[1] == true && filledChek[2] == true && filledChek[3] == true && filledChek[4] == true) {
            submit.setEnabled(true);
        } else {
            submit.setEnabled(false);
        }
    }//GEN-LAST:event_itemCodeKeyPressed

    @SuppressWarnings("empty-statement")
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed

        String[] itemData = new String[3];
        BigDecimal[] prices = new BigDecimal[2];

        try {
            itemData[0] = itemCode.getText().trim();
            itemData[1] = name.getText().trim();
            itemData[2] = stock.getText().trim();

            prices[0] = new BigDecimal(String.valueOf(cprice.getText().trim()));
            prices[1] = new BigDecimal(String.valueOf(sprice.getText().trim()));

            //creating object of database controlling class
            //calling newItemToBase methos in dbConnector class
            connect.newItemToBase(itemData, prices);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Please chek your barcode . this item is Available in stocks !");
        }
        catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Enter valid data !");
            }
        itemCount.setText(icount + " Items Added !");
        icount++;

        itemCode.setText(" ");
        name.setText(" ");
        cprice.setText(" ");
        sprice.setText(" ");
        stock.setText(" ");

        submit.setEnabled(false);

      //setting default values to text filef filled cheker array
        filledChek[0]=false;
        filledChek[1]=false;
        filledChek[2]=false;
        filledChek[3]=false;
        filledChek[4]=false;

    }//GEN-LAST:event_submitActionPerformed

    private void cpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpriceKeyPressed

    }//GEN-LAST:event_cpriceKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStocks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cprice;
    public static javax.swing.JTextField itemCode;
    private javax.swing.JLabel itemCount;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField name;
    private javax.swing.JTextField sprice;
    private javax.swing.JTextField stock;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
