
package chathurangani.book.shop;


import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
//Logger.getLogger(DealHistory.class.getName()).log(Level.SEVERE, null, ex);



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Dilum
 */
public class DealHistory extends javax.swing.JFrame {

    /**
     * Creates new form DealHistory
     */
    public DealHistory() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ok.png")));
        btn_delete.setEnabled(false);
        btn_item.setEnabled(false);
        
          TableColumnModel size = (dealTable.getColumnModel());
                size.getColumn(0).setPreferredWidth(40);
                size.getColumn(1).setPreferredWidth(200);
                size.getColumn(2).setPreferredWidth(150);
                size.getColumn(3).setPreferredWidth(150);
                size.getColumn(4).setPreferredWidth(150);
                size.getColumn(5).setPreferredWidth(150);
                size.getColumn(6).setPreferredWidth(150);
                size.getColumn(7).setPreferredWidth(80);
    }
    
    dbConnector connect = new dbConnector();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the  Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchBar = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        dateBox = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btn_delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dealTable = new javax.swing.JTable();
        btn_item = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Deals");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        searchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchBarKeyTyped(evt);
            }
        });

        search.setBackground(new java.awt.Color(51, 153, 255));
        search.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("SEARCH BILL NO");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        dateBox.setDateFormatString("yyyy-MM-dd");
        dateBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateBoxPropertyChange(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search By Date :");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Search By Bill No:");

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sales");

        btn_delete.setBackground(new java.awt.Color(153, 0, 0));
        btn_delete.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("DELETE SALE");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        dealTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        dealTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Deal No", "Name", "Sub Total", "advanced", "Discount", "Payment", "Balance", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dealTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dealTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dealTable);
        if (dealTable.getColumnModel().getColumnCount() > 0) {
            dealTable.getColumnModel().getColumn(1).setResizable(false);
        }

        btn_item.setBackground(new java.awt.Color(0, 153, 204));
        btn_item.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn_item.setForeground(new java.awt.Color(255, 255, 255));
        btn_item.setText("VIEW ITEMS");
        btn_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(547, 547, 547)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_item, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btn_item, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String code = searchBar.getText().trim();
        
        try {
            clearTable();
            connect.search_for_deals(code , "code");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong - DealHistory#214");
            connect.recod_error(ex.toString()+" Deal History 214");
        }
    }//GEN-LAST:event_searchActionPerformed

    private void searchBarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyTyped
      char charactor = evt.getKeyChar();
      
      if(charactor == KeyEvent.VK_ENTER)
        {
             String code = searchBar.getText().trim();
        
            try {
                clearTable();
                connect.search_for_deals(code , "code");
            } catch (Exception ex) {
               JOptionPane.showMessageDialog(null, "Something went wrong - DealHistory#230");
               connect.recod_error(ex.toString()+" Deal History 230");
            }
        }
    }//GEN-LAST:event_searchBarKeyTyped

    private void searchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBarKeyReleased
       
        if(searchBar.getText().trim().isEmpty())
        {
               try {
                    clearTable();
                    connect.search_for_deals();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Something went wrong - DealHistory#244");
                    connect.recod_error(ex.toString()+" Deal History 244");
                }
        }
      
    }//GEN-LAST:event_searchBarKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         System.gc();
    }//GEN-LAST:event_formWindowClosing

    private void dateBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateBoxPropertyChange

        try
        {
            clearTable();
             DateFormat d1 = new SimpleDateFormat("yyyy-MM-dd");
             connect.search_for_deals(d1.format(dateBox.getDate()) , "date");
        }
       catch(Exception e)
        {
            try {
                connect.search_for_deals();
            } catch (Exception ex) {
                connect.recod_error(e.toString()+" this is not a error, Deal History 267");
               // Logger.getLogger(DealHistory.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_dateBoxPropertyChange

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
            DefaultTableModel delas = (DefaultTableModel) dealTable.getModel();

            int row = dealTable.getSelectedRow();
            
       try {
                if(!dealTable.getValueAt(row, 0).toString().isEmpty())
                    {

                                    connect.cleardeal(dealTable.getValueAt(row, 0).toString()); 
                                    delas.removeRow(row);
                                    btn_delete.setEnabled(false);
                    }
                else
                    {

                        JOptionPane.showMessageDialog(null, "Please select a Sale !");
                    }
        }
     catch (Exception ex) 
           {
                JOptionPane.showMessageDialog(null, "Something went wrong - Deal History#275 !");
                connect.recod_error(ex.toString()+" - deal bistory 275");
                //Logger.getLogger(DealHistory.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void dealTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dealTableMouseClicked
        btn_delete.setEnabled(true);
        btn_item.setEnabled(true);
    }//GEN-LAST:event_dealTableMouseClicked

    private void btn_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemActionPerformed
      int row = dealTable.getSelectedRow();
        
      if(!dealTable.getValueAt(row,0).toString().isEmpty())
        {
            try
            {
                
                Deal_Item_History open = new Deal_Item_History(dealTable.getValueAt(row,0).toString() , dealTable.getValueAt(row,1).toString());
                open.setVisible(true);
                btn_item.setEnabled(false);
            }
        catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Something went wrong - Deal Item History#343");
                connect.recod_error(e.toString() +"-  Deal Item History 343" );
            }
        }
      else
        {
                JOptionPane.showMessageDialog(null, "Please Select a Sale !");
        }
    }//GEN-LAST:event_btn_itemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong - DealHistory#292");
            dbConnector connect = new dbConnector();
            connect.recod_error(ex.toString()+" Deal History 292");
        } 
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DealHistory().setVisible(true);
            }
        });
    }
    
     public static void clearTable()
        {
            DefaultTableModel delas = (DefaultTableModel) dealTable.getModel();
            
            while(delas.getRowCount() > 0)
                {
                    delas.removeRow(0);
                }
            
            btn_item.setEnabled(false);
            btn_delete.setEnabled(false);
        }
    
    //THIS METHOD WILL ADD A NEW ROWTO J TABLE USING dealdata ARRAY WHICH IS PASSED BY Search_Every_Field METHOD
    public static void dealItemsToTable(String [] dealData)
        {
            DefaultTableModel deals = (DefaultTableModel) dealTable.getModel();
            String [] lb = {"","","","","","","",""};
            deals.addRow(lb);
            deals.addRow(dealData);
        
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btn_delete;
    private static javax.swing.JButton btn_item;
    private com.toedter.calendar.JDateChooser dateBox;
    public static javax.swing.JTable dealTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchBar;
    // End of variables declaration//GEN-END:variables
}
