/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chathurangani.book.shop;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dilum
 */
public class returnQuan extends javax.swing.JFrame {

    /**
     * Creates new form returnQuan
     */
    public returnQuan(BigDecimal gotPrice) {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ok.png")));
        this.price_is = gotPrice;
    }

     BigDecimal price_is;
     dbConnector connect = new dbConnector();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        quanbox = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        quanbox.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        quanbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                quanboxKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quanboxKeyTyped(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel1.setText("Quantity");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(quanbox, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quanbox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void quanboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quanboxKeyTyped
         char character = evt.getKeyChar();
         String lenth = quanbox.getText();

        if ((Character.isDigit(character)) || (Character.isISOControl(character))) {
            quanbox.setEnabled(true);
        } else {
            evt.consume();
        }
        
        
         if (character == KeyEvent.VK_ENTER) 
         {
             if(!lenth.equals(""))
                {
                     if(Integer.valueOf(quanbox.getText())!=0 )
                     {
                        process(); //calling to search process
                    }
                }
           
         }
    }//GEN-LAST:event_quanboxKeyTyped

    private void quanboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quanboxKeyReleased
       String lenth = quanbox.getText();
        if ((lenth.length() == 11) || (lenth.length() == 0)) {

           evt.consume();

        } else {
            quanbox.setEditable(true);
        }
    }//GEN-LAST:event_quanboxKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String lenth = quanbox.getText();
        if(!lenth.equals(""))
                {
                     if(Integer.valueOf(quanbox.getText())!=0 )
                     {
                        process(); //calling to search process
                    }
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    void process()
        {
            String quan = quanbox.getText().trim();
            int quanis;
            try{
              quanis= Integer.parseInt(quan);
            }
            catch(Exception e)
            {
                quanis=1;
            }
            
            
            //calculating cashprice of each item
             try {
                    DefaultTableModel itemdata = (DefaultTableModel)returns.returnItemTable.getModel(); //table model of main retrun item displaying table
                   
                    DefaultTableModel selectedReturnItems = (DefaultTableModel)returns.selectedReturn.getModel(); //table model of selected retrun item displaying table
                    
                    
                    int row = returns.returnItemTable.getSelectedRow();
                    String [] put_item_to_return = {(String)returns.returnItemTable.getValueAt(row , 0)};
                      String cprice = connect.searchItemPrice(put_item_to_return[0]);
                     returns.cashPrice = returns.cashPrice.add( new BigDecimal(cprice).multiply(new BigDecimal(quan)));
                     
                     //updating stock items
                     int stock = connect.searchItemStock(put_item_to_return[0]); //cheking for current stock
                     stock = stock + Integer.parseInt(quan); //updatin stock
                     connect.updateStockitems("stock", String.valueOf(stock), put_item_to_return[0]);
                     
                     //updating quantity in return pannel selected return item table
                     int rowis = selectedReturnItems.getRowCount();
                     BigDecimal price = price_is.multiply(new BigDecimal(quan));
                     selectedReturnItems.setValueAt(quan , rowis-1 , 1);
                     selectedReturnItems.setValueAt(price , rowis-1 , 2);
                     
                     
               } catch (Exception ex) {
                Logger.getLogger(returns.class.getName()).log(Level.SEVERE, null, ex);
             }
        
            returns.proceed.setEnabled(true);
            returns.returnCount(price_is , quanis); //calling returncount method in return class
            dispose();
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(returnQuan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(returnQuan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(returnQuan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(returnQuan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new returnQuan(new BigDecimal("0.0")).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField quanbox;
    // End of variables declaration//GEN-END:variables
}
